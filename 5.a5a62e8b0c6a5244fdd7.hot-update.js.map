{"version":3,"sources":["webpack:///./src/app/corporate-account-tool/tabs/profile/add-edit-profile/add-edit-profile.tsx"],"names":[],"mappings":"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","file":"5.a5a62e8b0c6a5244fdd7.hot-update.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './add-edit-profile.scss';\nimport {useDispatch, useSelector} from 'react-redux';\nimport * as Yup from 'yup';\nimport {getAccountDetail, saveAccount} from '../../../../../store/slice/account.slice';\nimport {Button, FormCheck, Modal} from 'react-bootstrap';\nimport {FastField, Field, Formik} from 'formik';\nimport SelectField from '../../../../shared/SelectField';\nimport InputField from '../../../../shared/InputField';\nimport DatePickerField from '../../../../shared/DatePickerField';\nimport ToggleButton from '../../../../shared/toggle-button/toggle-button';\nimport {CONSTANT} from '../../../../../common/constants/CommonConst';\n\nfunction AddEditProfile(propsAddEditProfile: any) {\n    const {closeAddEditProfilePopup, accountDetail, isLevel3} = propsAddEditProfile;\n    const {isUpdateAccount} = useSelector((state: any) => state.account);\n    const [account, setAccount] = useState(accountDetail);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (isUpdateAccount) {\n            onClosePopup();\n        }\n    }, [isUpdateAccount]);\n\n    useEffect(() => {\n        if (isLevel3) {\n            setAccount({...account, 'parentId': accountDetail.id});\n        }\n    }, []);\n\n    useEffect(() => {\n        if (isUpdateAccount && accountDetail) {\n            dispatch(getAccountDetail(accountDetail.id));\n        }\n    }, [isUpdateAccount]);\n\n    const onClosePopup = () => {\n        closeAddEditProfilePopup(false);\n    };\n\n    const updateAccount = (values: any) => {\n        dispatch(saveAccount({...account, ...values}));\n    };\n\n    const generateAccountId = (n: number) => {\n        return Math.floor(Math.random() * (9 * (Math.pow(10, n)))) + (Math.pow(10, n));\n    };\n\n    const initialValues = () => {\n        return {\n            name: accountDetail?.name ?? '',\n            id: (accountDetail?.id && !isLevel3) ?? generateAccountId(6),\n            email: accountDetail?.email ?? '',\n            questionnaireReceiptDate: accountDetail?.questionnaireReceiptDate ?? new Date(),\n            statusAccount: accountDetail?.statusAccount ?? (isLevel3 ? 'verified' : 'pending'),\n            country: accountDetail?.country ?? '',\n            currency: accountDetail?.currency ?? '',\n            language: accountDetail?.language ?? '',\n            partnerLabelId: accountDetail?.partnerLabelId ?? '',\n            level: accountDetail?.level ?? (isLevel3 ? 'Level 3' : 'Level 2'),\n            creditLimit: accountDetail?.creditLimit ?? '',\n            license: accountDetail?.license ?? '',\n            mobile: accountDetail?.mobile ?? '',\n            phoneNumber: accountDetail?.phoneNumber ?? '',\n            userName: accountDetail?.userName ?? '',\n            address: accountDetail?.address ?? '',\n            password: accountDetail?.password ?? '',\n            city: accountDetail?.city ?? '',\n            postalCode: accountDetail?.postalCode ?? '',\n            approvedDate: accountDetail?.approvedDate ?? null,\n        };\n    };\n\n    const validationSchema = () => {\n        return Yup.object().shape({\n            name: Yup.string().required(),\n            id: Yup.number().positive().integer().required(),\n            email: Yup.string().email().required(),\n            questionnaireReceiptDate: Yup.date().required(),\n            statusAccount: Yup.string().required(),\n            country: Yup.string().required(),\n            currency: Yup.string().required(),\n            language: Yup.string().required(),\n            partnerLabelId: Yup.string().required(),\n            level: Yup.string().required(),\n            ...(account?.credit === 'Yes' ? {creditLimit: Yup.string().required()} : {creditLimit: Yup.string()}),\n        });\n    };\n\n    const profileInfo = (setFieldValue: any, values: any) => {\n        return (\n            <div className='profile-info'>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td className='required-field'>\n                                Account Name\n                            </td>\n                            <td>\n                                <FastField name='name' component={InputField}/>\n                            </td>\n                            <td className='required-field'>\n                                Account ID\n                            </td>\n                            <td>\n                                <FastField name='id' type='number' component={InputField} disabled/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='required-field'>\n                                Partner Label ID\n                            </td>\n                            <td>\n                                <FastField name='partnerLabelId' component={InputField}/>\n                            </td>\n                            <td className='required-field'>\n                                Level\n                            </td>\n                            <td>\n                                <FastField name='level' component={InputField} disabled={!accountDetail || isLevel3}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='required-field'>\n                                Status\n                            </td>\n                            <td>\n                                <Field name='statusAccount' component={SelectField} options={CONSTANT.ACCOUNT_CREATION.STATUS}/>\n                            </td>\n                            <td className='required-field'>\n                                Language\n                            </td>\n                            <td>\n                                <FastField name='language' component={SelectField} options={CONSTANT.ACCOUNT_CREATION.LANGUAGES}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                License\n                            </td>\n                            <td>\n                                <FastField name='license' component={InputField}/>\n                            </td>\n                            <td className='required-field'>\n                                Email Address\n                            </td>\n                            <td>\n                                <FastField name='email' component={InputField}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='required-field'>\n                                Currency\n                            </td>\n                            <td>\n                                <FastField name='currency' component={SelectField} options={CONSTANT.ACCOUNT_CREATION.CURRENCIES}/>\n                            </td>\n                            <td>\n                                Phone\n                            </td>\n                            <td>\n                                <FastField name='phoneNumber' component={InputField}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className='required-field'>Credit Account</td>\n                            <td>\n                                <ToggleButton name='credit' small={true} onClick={onChangeCredit} defaultChecked={account?.credit === 'Yes'}/>\n                            </td>\n                            <td>\n                                Mobile\n                            </td>\n                            <td>\n                                <FastField name='mobile' component={InputField}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                Credit Limit\n                            </td>\n                            <td>\n                                <Field name='creditLimit' component={InputField} disabled={account?.credit !== 'Yes'}/>\n                            </td>\n                            <td>\n                                username\n                            </td>\n                            <td>\n                                <Field name='userName' component={InputField} disabled={!accountDetail || values?.statusAccount !== 'verified'}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                Address\n                            </td>\n                            <td>\n                                <FastField name='address' component={InputField}/>\n                            </td>\n                            <td>\n                                Password\n                            </td>\n                            <td>\n                                <FastField name='password' type='password' component={InputField} disabled={!accountDetail}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                City\n                            </td>\n                            <td>\n                                <Field name='city' component={InputField}/>\n                            </td>\n                            <td/>\n                            <td/>\n                        </tr>\n                        <tr>\n                            <td className='required-field'>\n                                Country\n                            </td>\n                            <td>\n                                <FastField name='country' component={SelectField} options={CONSTANT.ACCOUNT_CREATION.COUNTRIES}/>\n                            </td>\n                            <td className='required-field'>\n                                Questionnaire Receipt Date\n                            </td>\n                            <td>\n                                <FastField name='questionnaireReceiptDate' component={DatePickerField} onChange={setFieldValue}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                Postal Code\n                            </td>\n                            <td>\n                                <FastField name='postalCode' component={InputField}/>\n                            </td>\n                            <td>\n                                Account Approval Date\n                            </td>\n                            <td>\n                                <FastField name='approvedDate' component={DatePickerField} onChange={setFieldValue}/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    const productAccess = () => {\n        return (\n            <div className='product-access'>\n                <table>\n                    <thead>\n                    <tr>\n                        <th colSpan={4}> Product Access</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <div className='inline'>\n                                    <FormCheck name='deposits' type='checkbox' defaultChecked={!accountDetail || accountDetail?.deposits === 'Yes'} onClick={onChangeProductAccess}/>\n                                    Deposits\n                                </div>\n                            </td>\n                            <td>\n                                <div className='inline'>\n                                    <FormCheck name='withdrawals' type='checkbox' defaultChecked={!accountDetail || accountDetail?.withdrawals === 'Yes'} onClick={onChangeProductAccess}/>\n                                    Withdrawals\n                                </div>\n                            </td>\n                            <td>\n                                <div className='inline'>\n                                    <FormCheck name='casino' type='checkbox' defaultChecked={!accountDetail || accountDetail?.casino === 'Yes'} onClick={onChangeProductAccess}/>\n                                    Casino\n                                </div>\n                            </td>\n                            <td>\n                                <div className='inline'>\n                                    <FormCheck name='sportsbook' type='checkbox' defaultChecked={!accountDetail || accountDetail?.sportsbook === 'Yes'} onClick={onChangeProductAccess}/>\n                                    Sportsbook\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    const onChangeCredit = (e: any) => {\n        setAccount({...account, [e.target.name]: e.target.checked ? 'Yes' : 'No'});\n    };\n\n    const onChangeProductAccess = (e: any) => {\n        setAccount({...account, [e.target.name]: e.target.checked ? 'Yes' : 'No'});\n    };\n\n    return (\n        <Formik initialValues={initialValues()} onSubmit={values => updateAccount(values)}\n                validationSchema={validationSchema()}>\n            {(props) => {\n                const {handleSubmit, setFieldValue, values} = props;\n                return (\n                    <form onSubmit={handleSubmit}>\n                        <Modal show={true} onHide={onClosePopup} keyboard={false} dialogClassName='modal-dialog modal-xl'>\n                            <Modal.Header closeButton>\n                                <Modal.Title className='title'>\n                                    {accountDetail ? 'EDIT' : 'ADD NEW'} CORPORATE PROFILE\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className='profile-detail'>\n                                    {profileInfo(setFieldValue, values)}\n                                    {productAccess()}\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant='primary' onClick={onClosePopup}>\n                                    Close\n                                </Button>\n                                <Button type='submit' variant='success' disabled={!props.isValid} onClick={props.handleSubmit}>\n                                    Save\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </form>\n                );\n            }}\n        </Formik>\n    );\n}\n\nexport default AddEditProfile;\n"],"sourceRoot":""}